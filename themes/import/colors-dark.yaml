colors:
  # Base/Global colors (the singletons!)
  focusBorder: ((std.outline.faint))
  foreground: ((std.fg))
  selection:
    background: ((std.accent))((alpha.4))
  descriptionForeground: ((std.fg))
  errorForeground: ((std.error))
  icon:
    foreground: ((std.fg.inactive))
  widget:
    shadow: ((std.shadow))
    border: ((std.outline.muted))

  # Text colors (for markdown preview, welcome page, etc)
  textBlockQuote:
    background: ((std.bg.whisper))
    border: ((std.outline.faint))
  textCodeBlock:
    background: ((std.bg.whisper))
  textLink:
    foreground: ((std.accent))
    activeForeground: ((std.accent))((alpha.8))
  textPreformat:
    foreground: ((std.info))
    background: ((std.bg.whisper))
  textSeparator:
    foreground: ((std.fg))((alpha.6))

  # Action colors (toolbar interactions)
  toolbar:
    hoverBackground: ((std.accent))((alpha.5))
    hoverOutline: ((std.outline))
    activeBackground: ((std.fg))((alpha.5))
  # Sash (splitter) colors
  sash:
    hoverBorder: ((std.outline))

  # Title bar
  titleBar:
    border: ((std.outline.faint))
    activeBackground: ((std.bg))
    activeForeground: ((std.fg))
    inactiveBackground: ((titleBar.activeBackground))aa
    inactiveForeground: ((titleBar.activeForeground))aa

  # Menubar (Top-level: File Edit etc.)
  menubar:
    selectionForeground: ((std.fg))
    selectionBackground: ((std.accent.muted))
    selectionBorder:  ((std.outline))

  # Menu (Dropdowns themselves)
  menu:
    foreground: ((std.fg))
    background: ((std.bg.glass.dark))
    selectionForeground: ((std.fg))
    selectionBackground: ((std.accent.muted))
    selectionBorder: ((std.outline))
    separatorBackground: ((std.accent.faint))
    border: ((std.outline))

  # Command Center colors
  commandCenter:
    # Colors
    background: ((titleBar.activeBackground))
    foreground: ((titleBar.activeForeground))
    border: ((std.outline))
    # Active (hovered or clicked)
    activeBackground: ((std.accent.muted))
    activeForeground: ((colors.white.1))
    activeBorder: ((std.outline))
    # Inactive Window
    inactiveForeground: ((colors.red.1)) # I don't think this works
    inactiveBorder: ((std.outline))
    # Debugging State
    debuggingBackground: ((colors.red.2))((alpha.5))

  # Activity Bar
  activityBar:
    background: ((std.bg))
    foreground: ((std.fg))
    inactiveForeground: ((std.fg))((alpha.5))
    border: ((std.outline))
    # Active State
    activeBackground: ((std.accent.muted))
    activeBorder: ((std.outline))
    activeFocusBorder: ((std.bg.inverse))
    # Dragging
    dropBorder: ((std.outline))

  # Activity Bar Badges
  activityBarBadge:
    background: ((std.accent))
    foreground: ((std.bg.inverse))

  # Warning Badge
  activityWarningBadge:
    background: ((std.warn))
    foreground: ((std.fg.inverse))

  # Error Badge
  activityErrorBadge:
    background: ((std.error))
    foreground: ((std.fg.inverse))

  # Activity Bar Top
  activityBarTop:
    background: ((activityBar.background))
    foreground: ((activityBar.foreground))
    inactiveForeground: ((activityBar.inactiveForeground))
    activeBackground: ((activityBar.activeBackground))
    activeBorder: ((activityBar.activeBorder))
    dropBorder: ((activityBar.dropBorder))

  # working on this one
  # Lists and trees
  list:
    activeSelectionBackground: ((std.accent))((alpha.4))
    activeSelectionForeground: ((std.fg))
    activeSelectionIconForeground: ((std.fg))((alpha.7))

    inactiveSelectionBackground: ((std.accent))((alpha.3))
    inactiveSelectionForeground: ((std.fg))
    inactiveSelectionIconForeground: ((std.fg))((alpha.7))

    focusBackground: ((std.accent))((alpha.2))
    focusForeground: ((std.fg))
    focusOutline: ((std.outline))
    focusHighlightForeground: ((std.bg.inverse)) # I can't seem to activate this one
    focusAndSelectionOutline: ((std.outline))

    hoverBackground: ((std.accent))((alpha.3))
    hoverForeground: ((std.bg.inverse))((alpha.9))

    dropBackground: ((std.accent.faint))
    dropBetweenBackground: ((std.accent.muted))

    highlightForeground: ((std.accent))((alpha.8)) # I can't seem to activate this one

    filterMatchBackground: ((std.accent))((alpha.7))
    filterMatchBorder: ((list.activeSelectionForeground))

    errorForeground: ((std.error))
    warningForeground: ((std.warn))
    invalidItemForeground: ((std.info))
    deemphasizedForeground: ((std.fg))((alpha.5))

  # List Filter Widget
  listFilterWidget:
    background: ((std.bg.glass))
    outline: "#ffffff"
    noMatchesOutline: "#ffffff"
    shadow: ((std.shadow))

  # Tree guides
  tree:
    indentGuidesStroke: ((std.line))
    inactiveIndentGuidesStroke: ((std.line.muted))
    tableColumnsBorder: ((std.outline))
    tableOddRowsBackground: ((std.bg))

  # Status Bar colors
  # Base Status Bar
  statusBar:
    background: ((titleBar.activeBackground))
    foreground: ((titleBar.activeForeground))
    border: ((titleBar.border))
    # No Folder Open
    noFolderBackground: ((std.bg))
    noFolderForeground: ((std.fg))((alpha.5))
    noFolderBorder: ((std.outline))
    # Debugging (stronger presence)
    debuggingBackground: ((std.error))
    debuggingForeground: ((std.fg.inverse))
    debuggingBorder: ((std.error))((alpha.6))
    # Focus
    focusBorder: ((std.outline))

  # Status Bar Item Interaction
  statusBarItem:
    activeBackground: ((std.accent))((alpha.6))
    hoverBackground: ((std.accent.muted))
    hoverForeground: ((colors.white.1))
    compactHoverBackground: ((std.accent.faint))
    focusBorder: ((std.outline))
    # Prominent Items
    prominentBackground: ((std.accent))((alpha.5))
    prominentForeground: ((std.fg))
    prominentHoverBackground: ((std.accent))aa
    prominentHoverForeground: ((colors.white.1))
    # Remote Indicator
    remoteBackground: ((std.accent))
    remoteForeground: ((colors.white.1))
    remoteHoverBackground: ((std.accent))
    remoteHoverForeground: ((colors.white.1))
    # Offline Indicator
    offlineBackground: ((std.warn))
    offlineForeground: ((std.fg.inverse))
    offlineHoverBackground: ((std.warn))((alpha.2))
    offlineHoverForeground: ((std.fg.inverse))
    # Error State Items
    errorBackground: ((std.error))
    errorForeground: ((std.fg.inverse))
    errorHoverBackground: ((std.error))((alpha.2))
    errorHoverForeground: ((std.fg.inverse))
    # Warning State Items
    warningBackground: ((std.warn))
    warningForeground: ((std.fg.inverse))
    warningHoverBackground: ((statusBarItem.offlineHoverBackground))
    warningHoverForeground: ((std.fg.inverse))

  # Editor Groups & Tabs
  # Editor Action List (quick fix menu, etc)
  editorActionList:
    background: ((std.bg.faint))
    foreground: ((std.fg))
    focusBackground: ((std.accent))((alpha.3))
    focusForeground: ((std.accent))

  # Editor Advanced Features (missing from current YAML)
  # Whitespace
  editorWhitespace:
    foreground: ((std.accent.faint))

  # Editor Group
  editorGroup:
    border: ((std.transparent))
    dropBackground: ((std.accent.faint))
    emptyBackground: ((std.bg))
    focusedEmptyBorder: ((std.outline))
    dropIntoPromptForeground: ((std.fg))
    dropIntoPromptBackground: ((std.bg))((alpha.9))
    dropIntoPromptBorder: ((std.outline.louder))

  # Editor Group Header
  editorGroupHeader:
    noTabsBackground: ((editorGroup.emptyBackground))((alpha.7))
    tabsBackground: ((std.bg))((alpha.6))
    tabsBorder: ((std.transparent))
    border: ((std.outline))

  # Editor Pane
  editorPane:
    background: ((std.bg))

  sideBySideEditor:
    horizontalBorder: ((std.outline))
    verticalBorder: ((std.outline))

  # Tabs
  tab:
    border: ((std.fg))((alpha.4))
    activeBorder: ((std.transparent))
    unfocusedActiveBorder: ((std.transparent))
    hoverBorder: ((std.outline))
    unfocusedHoverBorder: ((std.outline))
    lastPinnedBorder: ((std.outline))

    activeBorderTop: ((std.outline))
    unfocusedActiveBorderTop: ((std.outline.louder))
    selectedBorderTop: ((std.outline))

    activeBackground: ((std.accent))((alpha.5))
    selectedBackground: ((std.bg))((alpha.9))
    unfocusedActiveBackground: ((std.accent))((alpha.4))
    inactiveBackground: ((std.transparent))
    unfocusedInactiveBackground: ((std.bg))((alpha.5))
    unfocusedHoverBackground: ((std.bg))((alpha.6))
    hoverBackground: ((std.bg))((alpha.5))

    activeForeground: ((std.fg))
    selectedForeground: ((std.fg))
    unfocusedActiveForeground: ((std.fg))((alpha.8))
    inactiveForeground: ((std.fg))((alpha.6))
    unfocusedInactiveForeground: ((std.fg))((alpha.7))
    unfocusedHoverForeground: ((colors.white.3))
    hoverForeground: ((colors.white.1))

    # Modified indicators
    activeModifiedBorder: ((std.outline))
    inactiveModifiedBorder: ((std.outline.loud))
    unfocusedActiveModifiedBorder: ((std.outline.louder))
    unfocusedInactiveModifiedBorder: ((std.outline))

  # Panel colors
  # Panel Base + Frame
  panel:
    background: ((editorGroupHeader.tabsBackground))
    border: ((std.outline.muted))
    dropBorder: ((std.outline.loud))

  # Panel Title Bar
  panelTitle:
    activeBorder: ((tab.activeBorderTop))
    activeForeground: ((tab.activeForeground))
    inactiveForeground: ((tab.inactiveForeground))
    border: ((std.outline.whisper))

  # Panel Title Badge (eg. terminal counts)
  panelTitleBadge:
    background: ((std.accent))
    foreground: ((colors.white.1))

  # Panel Section Headers
  panelSectionHeader:
    background: ((panel.background))  # slightly elevated
    foreground: ((std.fg))
    border: ((std.outline.faint))

  # Panel Sections
  panelSection:
    border: ((std.outline.faint))
    dropBackground: ((std.accent.muted))

  # Panel Input
  panelInput:
    border: ((std.outline.louder))

  # Panel Sticky Scroll
  panelStickyScroll:          # TODO: come back to this
    background: ((std.test))
    border: ((std.test))
    shadow: ((std.test))

  # Output View
  outputView:
    background: ((std.transparent))

  outputViewStickyScroll:
    background: ((std.bg.glass))

  # Side bar
  sideBar:
    background: ((editor.background))  # slightly different from main bg
    foreground: ((std.fg))((alpha.9))  # dimmer than main text
    border: ((std.outline.faint))
    dropBackground: ((std.accent))((alpha.5))

  # Sidebar title
  sideBarTitle:
    foreground: ((std.fg))((alpha.7))  # even dimmer for titles

  # Sidebar section headers
  sideBarSectionHeader:
    background: ((std.accent))((alpha.3))
    foreground: ((std.fg))((alpha.8))
    border: ((std.outline.faint))

  # Line Numbers
  editorLineNumber:
    foreground: ((std.accent))((alpha.4))
    activeForeground: ((std.accent))((alpha.9))
    dimmedForeground: ((editorLineNumber.foreground))

  # Cursor
  editorCursor:
    foreground: ((std.accent))((alpha.7))  # visible but not screaming
    background: ((editor.background))  # block cursor background

  # Multi-cursor
  editorMultiCursor:
    primary:
      foreground: ((editorCursor.foreground))
      background: ((editorCursor.background))
    secondary:
      foreground: ((std.accent))((alpha.7))  # slightly dimmer
      background: ((editorCursor.background))

  # Editor colors
  editor:
    background: ((std.bg.muted))
    foreground: ((std.fg))
    placeholder:
      foreground: ((std.fg))((alpha.6))
    compositionBorder: ((std.outline.louder))

    # Text selection
    selectionBackground: ((std.accent))((alpha.4))
    selectionForeground: ((std.fg))
    inactiveSelectionBackground: ((std.accent))((alpha.2))

    # Matching content highlights
    selectionHighlightBackground: ((std.accent))((alpha.2))
    selectionHighlightBorder: ((std.outline))

    # Read access highlights (when you click on a variable)
    wordHighlightBackground: ((std.accent))((alpha.3))
    wordHighlightBorder: ((std.outline))

    # Write access highlights (more prominent)
    wordHighlightStrongBackground: ((std.warn))((alpha.3))
    wordHighlightStrongBorder: ((std.warn))((alpha.5))

    # Generic text matches
    wordHighlightTextBackground: ((std.info))((alpha.3))
    wordHighlightTextBorder: ((std.info))((alpha.5))

    # CURRENT match (the focused one) - needs to pop!
    findMatchBackground: ((std.success))((alpha.8))
    # Thanks MS for swapping this with editor.findMatchForeground
    findMatchHighlightForeground: ((std.successInverse))((alpha.8))
    findMatchBorder: ((std.success))

    # OTHER matches (passive highlights) - whisper mode
    findMatchHighlightBackground: ((std.success))((alpha.5))
    # Thanks MS for swapping this with editor.findMatchHighlightForeground
    findMatchForeground: ((std.successInverse))((alpha.5))
    findMatchHighlightBorder: ((std.success))((alpha.6))

    # Range highlights (replacement preview, etc)
    findRangeHighlightBackground: ((std.accent))((alpha.2))
    findRangeHighlightBorder: ((std.outline))

    # Line Highlighting
    lineHighlightBackground: ((std.outline))
    lineHighlightBorder: ((std.outline.faint))

    # Hover/Symbol Highlighting
    hoverHighlightBackground: ((std.accent))((alpha.2))
    symbolHighlightBackground: ((std.accent))((alpha.2))
    symbolHighlightBorder: ((std.outline.loud))
    rangeHighlightBackground: ((std.outline.whisper))
    rangeHighlightBorder: ((std.outline.faint))

    # Folds
    ## Folded block background
    foldBackground: ((std.accent))((alpha.3))
    # Folded placeholder text (the little …)
    foldPlaceholderForeground: ((std.accent))

    # Debug Stack Frame Highlights
    stackFrameHighlightBackground: ((std.accent))((alpha.3))
    focusedStackFrameHighlightBackground: ((std.error))((alpha.3))

    # Inline Values (debug hover values)
    inlineValuesBackground: ((colors.blue.1))  # TODO: #0D4699 - verify match
    inlineValuesForeground: ((std.fg))

    # Snippets
    snippetTabstopHighlightBackground: ((std.accent))((alpha.2))
    snippetTabstopHighlightBorder: ((std.outline.muted))
    snippetFinalTabstopHighlightBackground: ((colors.blue.4))((alpha.3))  # TODO: #87c7c7 + 22
    snippetFinalTabstopHighlightBorder: ((colors.blue.4))((alpha.5))     # TODO: #87c7c7 + 55

  # Scrollbar control
  scrollbar:
    shadow: ((std.shadow))

  scrollbarSlider:
    background: ((std.accent.faint))
    hoverBackground: ((std.accent.muted))
    activeBackground: ((std.accent))((alpha.6))

  # Badge
  badge:
    foreground: ((std.accent))
    background: ((std.accent))((alpha.6))

  # Progress bar
  progressBar:
    background: ((std.success))

  # Input control
  input:
    background: ((std.bg.muted))
    border: ((std.outline.louder))
    foreground: ((std.fg))
    placeholderForeground: ((std.fg))((alpha.5))

  inputOption:
    activeBackground: ((std.accent))
    activeBorder: ((std.fg))((alpha.4))
    activeForeground: ((std.fg))

  # Input validation states
  inputValidation:
    errorBackground: ((input.background))
    errorForeground: ((std.error))
    errorBorder: ((std.error))((alpha.6))
    warningBackground: ((input.background))
    warningForeground: ((std.warn))
    warningBorder: ((std.warn))((alpha.6))
    infoBackground: ((input.background))
    infoForeground: ((std.info))
    infoBorder: ((std.info))((alpha.6))

  # Dropdown control
  dropdown:
    background: ((input.background))
    listBackground: ((std.bg.glass))
    border: ((input.border))
    foreground: ((input.foreground))

  # Button control
  button:
    background: ((std.accent))((alpha.6))
    foreground: ((std.fg))
    border: ((std.outline))
    hoverBackground: ((std.accent))((alpha.7))

    # Secondary buttons
    secondaryForeground: ((std.fg))
    secondaryBackground: ((std.bg.muted))
    secondaryHoverBackground: ((std.bg))((alpha.5))

    separator: ((std.fg))((alpha.3))

  # Checkbox
  checkbox:
    background: ((std.accent))((alpha.6))
    foreground: ((std.fg))
    border: ((std.outline))
    selectBackground: ((std.accent))((alpha.4))
    selectBorder: ((std.outline))
    disabled:
      background: ((std.bg.muted))
      foreground: ((std.fg))((alpha.5))

  # Radio buttons
  radio:
    activeBackground: ((std.accent))((alpha.4))
    activeBorder: ((std.outline))
    activeForeground: ((std.fg))
    inactiveBackground: ((std.accent))((alpha.6))
    inactiveBorder: ((std.outline.muted))
    inactiveForeground: ((std.fg))((alpha.7))
    inactiveHoverBackground: ((std.accent))((alpha.5))

  # Profiles
  profileBadge:
    background: ((std.accent))
    foreground: ((std.fg.inverse))

  profiles:
    sashBorder: ((std.outline.faint))

  # Minimap
  minimap:
    background: ((sideBar.background))
    selectionHighlight: ((std.accent))((alpha.3))
    errorHighlight: ((std.error))((alpha.5))
    warningHighlight: ((std.warn))((alpha.5))

  minimapSlider:
    background: ((std.accent))((alpha.2))
    hoverBackground: ((std.accent))((alpha.4))
    activeBackground: ((std.accent))((alpha.6))

  minimapGutter:
    addedBackground: ((std.success))((alpha.5))
    modifiedBackground: ((colors.yellow.2))((alpha.5))
    deletedBackground: ((std.error))((alpha.5))

  # Indent Guides
  editorIndentGuide:
    background1: ((colors.blue.1))((alpha.1))  # Very faint blue guides
    background2: ((colors.blue.1))((alpha.2))
    background3: ((colors.blue.1))((alpha.3))
    background4: ((colors.blue.1))((alpha.4))
    background5: ((colors.blue.1))((alpha.5))
    background6: ((colors.blue.1))((alpha.6))
    activeBackground1: ((std.accent))((alpha.5))  # All active guides same color
    activeBackground2: ((std.accent))((alpha.5))
    activeBackground3: ((std.accent))((alpha.5))
    activeBackground4: ((std.accent))((alpha.5))
    activeBackground5: ((std.accent))((alpha.5))
    activeBackground6: ((std.accent))((alpha.5))

  # Bracket Matching
  editorBracketMatch:
    background: ((colors.blue.1))((alpha.6))
    border: ((std.outline.muted))

  # Bracket Pair Colorization
  editorBracketHighlight:
    foreground1: ((colors.blue.4))((alpha.9))  # dd rounds to e
    foreground2: ((colors.yellow.2))((alpha.9))
    foreground3: ((colors.green.3))((alpha.9))
    foreground4: ((colors.purple.3))((alpha.9))  # colors.purple.3 exists = #a700a7
    foreground5: ((std.accent))((alpha.9))
    foreground6: ((std.error))((alpha.9))
    unexpectedBracket:
      foreground: ((colors.pink.1))  # #ff0077 from JSON

  editorBracketPairGuide:
    background1: ((colors.blue.1))((alpha.1))
    background2: ((colors.blue.1))((alpha.2))
    background3: ((colors.blue.1))((alpha.3))
    background4: ((colors.blue.1))((alpha.4))
    background5: ((colors.blue.1))((alpha.5))
    background6: ((colors.blue.1))((alpha.6))
    activeBackground1: ((std.accent))((alpha.5))
    activeBackground2: ((std.accent))((alpha.5))
    activeBackground3: ((std.accent))((alpha.5))
    activeBackground4: ((std.accent))((alpha.5))
    activeBackground5: ((std.accent))((alpha.5))
    activeBackground6: ((std.accent))((alpha.5))

  # Overview Ruler (sidebar ruler with indicators)
  editorOverviewRuler:
    background: ((std.bg.glass))
    border: ((std.outline.faint))
    # Find/Selection highlights
    findMatchForeground: ((colors.green.2))((alpha.6))  # #beff0c66 approximated
    rangeHighlightForeground: ((colors.blue.4))((alpha.7))
    selectionHighlightForeground: ((colors.blue.4))((alpha.7))
    # Word highlights
    wordHighlightForeground: ((colors.blue.4))((alpha.6))  # read access
    wordHighlightStrongForeground: ((std.error))((alpha.6))  # write access
    wordHighlightTextForeground: ((std.warn))((alpha.6))  # generic text match
    # Git/SCM modifications
    modifiedForeground: ((colors.yellow.3))((alpha.7))  # #d7c787aa
    addedForeground: ((colors.green.4))  # #87b087
    deletedForeground: ((std.error))  # #cc5c5c
    # Diagnostics
    errorForeground: ((std.error))
    warningForeground: ((std.warn))
    infoForeground: ((colors.blue.5))  # #88aacc approximated
    # Bracket matching
    bracketMatchForeground: ((std.accent))
    # Inline chat (AI content)
    inlineChatInserted: ((colors.green.4))
    inlineChatRemoved: ((std.error))
    currentContentForeground: ((colors.blue.4))  # #87C7C7
    incomingContentForeground: ((colors.purple.2))  # #8787D7
    commonContentForeground: ((colors.yellow.4))  # #D7AF87 - need colors.yellow.4

  # TODO: Fix to use std status colours
  # Error/Warning/Info decorations in editor
  editorError:
    foreground: ((std.error))
    border: ((std.error))((alpha.6))  # 99 rounds to 88 = alpha.6
    background: ((std.error))((alpha.3))

  editorWarning:
    foreground: ((std.warn))
    border: ((std.warn))((alpha.6))
    background: ((std.warn))((alpha.3))

  editorInfo:
    foreground: ((colors.blue.5))  # #88aacc
    border: ((colors.blue.5))((alpha.6))
    background: ((colors.blue.5))((alpha.3))

  editorHint:
    foreground: ((std.success))
    border: ((std.success))((alpha.6))

  # Problems panel icons
  problemsErrorIcon:
    foreground: ((std.error))
  problemsWarningIcon:
    foreground: ((std.warn))
  problemsInfoIcon:
    foreground: ((colors.blue.5))

  # TODO: Fix to use std status colours
  # Editor Gutter (line number area with git indicators, etc.)
  editorGutter:
    background: ((std.bg))
    # Git modification indicators
    modifiedBackground: ((colors.yellow.3))((alpha.6))        # #d7c787 + 88
    modifiedSecondaryBackground: ((colors.yellow.2))((alpha.6)) # #c9b27c + 88
    addedBackground: ((colors.green.4))((alpha.6))            # #87b087 + 88
    addedSecondaryBackground: ((std.success))((alpha.6))      # #a3c4a3 + 88
    deletedBackground: ((std.error))                          # #cc5c5c (solid)
    deletedSecondaryBackground: ((colors.red.3))              # #b66c6c - TODO: need to check colors.red array
    # Comment indicators
    commentRangeForeground: ((std.fg))((alpha.7))             # #e1e1e1 + aa
    commentGlyphForeground: ((std.success))                   # #a3c4a3
    commentUnresolvedGlyphForeground: ((std.warn))            # #e5bf72
    # UI controls
    foldingControlForeground: ((std.accent))                  # #4b8ebd
    # Generic item indicators
    itemGlyphForeground: ((std.accent))((alpha.8))            # #b0e9ff + cc - TODO: need to verify this color
    itemBackground: ((colors.blue.1))((alpha.2))             # #2e5673 + 11 - TODO: need to verify this matches

  # Editor Comments Widget
  editorCommentsWidget:
    resolvedBorder: ((std.success))((alpha.5))
    unresolvedBorder: ((std.warn))((alpha.5))
    rangeBackground: ((colors.blue.1))((alpha.2))  # TODO: #2e5673 + 11
    rangeActiveBackground: ((std.accent))((alpha.3))
    replyInputBackground: ((input.background))  # Reuse input styling

  # Inline Edit (AI suggestions, etc.)
  inlineEdit:
    gutterIndicator:
      primaryBorder: ((std.outline))
      primaryForeground: ((std.accent))  # TODO:  #b0e9ff - need to check this color
      primaryBackground: ((colors.blue.1))((alpha.3))
      secondaryBorder: ((std.success))
      secondaryForeground: ((colors.yellow.2))  # TODO: #c9b27c
      secondaryBackground: ((colors.blue.1))((alpha.2))
      successfulBorder: ((colors.green.4))  # TODO: #87b087
      successfulForeground: ((std.success))
      successfulBackground: ((colors.blue.1))((alpha.3))  # TODO: #2e5673 + 22
      background: ((std.bg))

    originalBackground: ((std.accent))((alpha.3))
    modifiedBackground: ((std.accent))((alpha.3))  # TODO: #b0e9ff - different shade?
    originalChangedLineBackground: ((std.accent))((alpha.4))
    originalChangedTextBackground: ((colors.blue.1))((alpha.3))
    modifiedChangedLineBackground: ((std.accent))((alpha.3))
    modifiedChangedTextBackground: ((std.accent))((alpha.4))  # TODO: #b0e9ff + 44
    originalBorder: ((std.outline))
    modifiedBorder: ((std.outline))  # TODO: #b0e9ff - different from std.accent?
    tabWillAcceptModifiedBorder: ((colors.green.4))
    tabWillAcceptOriginalBorder: ((std.success))

  # Diff Editor
  diffEditor:
    insertedTextBackground: ((colors.green.4))((alpha.3))  # TODO: #87b087 + 22
    insertedTextBorder: ((colors.green.4))((alpha.5))      # TODO: #87b087 + 55
    removedTextBackground: ((std.error))((alpha.3))
    removedTextBorder: ((std.error))((alpha.5))
    insertedLineBackground: ((colors.green.4))((alpha.2))  # TODO: #87b087 + 11
    removedLineBackground: ((std.error))((alpha.2))

  diffEditorGutter:
    insertedLineBackground: ((colors.green.4))((alpha.3))  # TODO: #87b087 + 33
    removedLineBackground: ((std.error))((alpha.3))

  diffEditorOverview:
    insertedForeground: ((colors.green.4))((alpha.6))      # TODO: #87b087 + 88
    removedForeground: ((std.error))((alpha.6))

  # Inline Chat (AI assistant features)
  inlineChat:
    background: ((panel.background))  # TODO: #1f1f1f - verify panel.background matches
    foreground: ((std.fg))
    border: ((std.outline.muted))
    shadow: ((std.shadow))  # TODO: #00000033 - verify std.shadow matches

  inlineChatInput:
    background: ((input.background))
    border: ((std.outline.faint))
    focusBorder: ((std.outline.loud))
    placeholderForeground: ((std.fg))((alpha.5))

  inlineChatDiff:
    inserted: ((colors.green.4))((alpha.3))  # TODO: #87b087 + 22
    removed: ((std.error))((alpha.3))

  # Interactive Code Cell Borders
  interactive:
    activeCodeBorder: ((std.outline.muted))   # TODO: #4b8ebd + 66
    inactiveCodeBorder: ((std.outline.faint))

  # Editor Widget (Find/Replace, Peek input, etc.)
  editorWidget:
    foreground: ((std.fg))
    background: ((panel.background))  # TODO: #1f1f1f - verify match
    border: ((std.outline.faint))
    resizeBorder: ((std.outline.louder))

  # Suggest Widget (autocomplete)
  editorSuggestWidget:
    background: ((panel.background))
    border: ((std.outline.faint))
    foreground: ((sideBar.foreground))  # TODO: #d1d1d1 - verify match
    focusHighlightForeground: ((std.accent))  # TODO: #b0e9ff - verify color
    highlightForeground: ((std.accent))  # TODO: #b0e9ff - verify color
    selectedBackground: ((list.activeSelectionBackground))
    selectedForeground: ((std.fg))
    selectedIconForeground: ((std.accent))  # TODO: #b0e9ff - verify color

  editorSuggestWidgetStatus:
    foreground: ((list.deemphasizedForeground))  # TODO: #808080aa - verify match

  # Editor Hover Widget
  editorHoverWidget:
    foreground: ((std.fg))
    background: ((panel.background))
    border: ((std.outline.faint))
    highlightForeground: ((std.accent))  # TODO: #b0e9ff - verify color
    statusBarBackground: ((input.background))

  # Ghost Text (Inline Suggest/Preview)
  editorGhostText:
    foreground: ((std.fg))((alpha.4))  # TODO: #e1e1e144 - verify alpha
    background: ((std.transparent))
    border: ((std.outline.faint))

  # Sticky Scroll
  editorStickyScroll:
    background: ((std.bg.glass))  # TODO: #0a0a0a77 - verify match
    border: ((std.outline.faint))
    shadow: ((std.shadow))  # TODO: #4b8ebd11 - verify match

  editorStickyScrollHover:
    background: ((std.bg.glass.hover))  # TODO: #0a0a0aff - verify match

  # Debug Exception Widget
  debugExceptionWidget:
    background: ((panel.background))
    border: ((std.error))((alpha.7))  # TODO: #cc5c5caa - verify alpha

  # Marker Navigation (error/warning navigation)
  editorMarkerNavigation:
    background: ((std.bg))

  editorMarkerNavigationError:
    background: ((std.error))((alpha.7))  # TODO: #cc5c5caa - verify alpha
    headerBackground: ((std.error))((alpha.4))

  editorMarkerNavigationWarning:
    background: ((std.warn))((alpha.7))  # TODO: #e5bf72aa - verify alpha
    headerBackground: ((std.warn))((alpha.4))

  editorMarkerNavigationInfo:
    background: ((std.info))((alpha.7))  # TODO: #88aaccaa - verify alpha and std.info color
    headerBackground: ((std.info))((alpha.4))  # TODO: verify std.info exists

  # Peek View (Go to Definition, Find References, etc.)
  peekView:
    border: ((std.outline.louder))

  peekViewTitle:
    background: ((editorGroup.emptyBackground))((alpha.7))  # TODO: #0a0a0a77 - verify match

  peekViewTitleLabel:
    foreground: ((std.fg))

  peekViewTitleDescription:
    foreground: ((colors.white.5))((alpha.9))  # TODO: #808080ee - verify match

  peekViewResult:
    background: ((editorGroup.emptyBackground))((alpha.7))  # TODO: #0a0a0a77 - verify match
    fileForeground: ((std.fg))
    lineForeground: ((sideBarTitle.foreground))  # TODO: #a0a0a0 - verify match
    matchHighlightBackground: ((std.transparent))
    selectionBackground: ((list.activeSelectionBackground))
    selectionForeground: ((std.fg))

  peekViewEditorGutter:
    background: ((std.accent))((alpha.2))  # TODO: #4b8ebd11 - verify alpha

  peekViewEditor:
    matchHighlightBackground: ((std.accent))((alpha.3))  # TODO: #b0e9ff33 - verify color
    matchHighlightBorder: ((std.outline.louder))
    background: ((input.background))  # #2525257f

  peekViewEditorStickyScroll:
    background: ((std.bg.glass))

  # Merge Conflicts
  merge:
    currentHeaderBackground: ((std.accent))((alpha.3))
    currentContentBackground: ((std.accent))((alpha.2))
    incomingHeaderBackground: ((colors.green.4))((alpha.3))  # TODO: #87b087 + 33
    incomingContentBackground: ((colors.green.4))((alpha.2))  # TODO: #87b087 + 11
    commonContentBackground: ((colors.white.5))((alpha.2))  # TODO: #808080 + 11
    commonHeaderBackground: ((colors.white.5))((alpha.3))  # TODO: #808080 + 33
    border: ((std.outline))

  mergeEditor:
    change:
      background: ((std.accent))((alpha.3))
      word:
        background: ((std.accent))((alpha.4))
    conflict:
      unhandledUnfocused:
        border: ((std.error))((alpha.5))
      unhandledFocused:
        border: ((std.error))((alpha.7))  # TODO: #cc5c5caa - verify alpha
      handledUnfocused:
        border: ((colors.green.4))((alpha.5))  # TODO: #87b087 + 55
      handledFocused:
        border: ((colors.green.4))((alpha.7))  # TODO: #87b087 + aa
      handled:
        minimapOverViewRuler: ((colors.green.4))((alpha.7))  # TODO: #87b087 + aa
      unhandled:
        minimapOverViewRuler: ((std.error))((alpha.7))  # TODO: #cc5c5caa - verify alpha
      input1:
        background: ((std.accent))((alpha.3))
      input2:
        background: ((colors.green.4))((alpha.3))  # TODO: #87b087 + 22
    conflictingLines:
      background: ((std.error))((alpha.3))
    changeBase:
      background: ((colors.white.5))((alpha.3))  # TODO: #808080 + 22
      word:
        background: ((colors.white.5))((alpha.4))  # TODO: #808080 + 44

  # Action Bar
  actionBar:
    toggledBackground: ((colors.black.3))  # TODO: #383a49 - verify match to colors.black.3

  # Simple Find Widget
  simpleFindWidget:
    sashBorder: ((std.test))  # TODO: #ff0000 - this is red, matches your test color

  # Gauge (progress indicators)
  gauge:
    background: ((std.bg))
    foreground: ((std.success))
    border: ((std.outline.faint))
    warningBackground: ((colors.yellow.1))  # #b19500
    warningForeground: ((colors.yellow.3))  # #ffd700
    errorBackground: ((colors.red.1))       # #861c11
    errorForeground: ((colors.red.5))       # #e85b4c

  # Notification Center
  notificationCenter:
    border: ((std.outline.faint))

  notificationCenterHeader:
    foreground: ((std.fg))
    background: ((std.bg))

  # Notification Toasts
  notificationToast:
    border: ((std.outline))

  # Notification Items
  notifications:
    foreground: ((std.fg))
    background: ((std.bg))
    border: ((std.outline.whisper))

  # Links inside notifications
  notificationLink:
    foreground: ((std.accent))  # TODO: #b0e9ff - verify color match

  # Icons
  notificationsErrorIcon:
    foreground: ((std.error))

  notificationsWarningIcon:
    foreground: ((std.warn))

  notificationsInfoIcon:
    foreground: ((std.info))  # TODO: #88aacc - verify std.info exists

  # Banner (top-of-workbench notifications)
  banner:
    background: ((std.accent))((alpha.7))
    foreground: ((colors.white.1))
    iconForeground: ((std.accent))  # TODO: #b0e9ff - verify color match

  # Extension View
  extensionButton:
    prominentForeground: ((std.fg))
    prominentBackground: ((button.background))  # TODO: #1a2f4f - verify match
    prominentHoverBackground: ((std.accent))
    foreground: ((std.fg))
    background: ((button.secondaryBackground))
    hoverBackground: ((std.accent))
    separator: ((std.line))  # TODO: #4b8ebd66 - verify alpha

  extensionBadge:
    remoteBackground: ((std.accent))
    remoteForeground: ((colors.white.1))

  extensionIcon:
    starForeground: ((std.warn))
    verifiedForeground: ((std.info))
    preReleaseForeground: ((std.accent))  # TODO: #b0e9ff - verify color
    sponsorForeground: ((std.error))
    privateForeground: ((std.success))

  # Quick Picker
  pickerGroup:
    border: ((std.outline))
    foreground: ((std.accent))  # TODO: #b0e9ff - verify color

  quickInput:
    background: ((editorGroup.emptyBackground))((alpha.8))  # TODO: #0a0a0abb - verify match
    foreground: ((std.fg))

  quickInputList:
    focusBackground: ((std.accent))((alpha.5))
    focusForeground: ((colors.white.1))
    focusIconForeground: ((std.accent))  # TODO: #b0e9ff - verify color

  quickInputTitle:
    background: ((editorGroup.emptyBackground))((alpha.8))  # TODO: #0a0a0abb - verify match

  # Keybinding Labels
  keybindingLabel:
    background: ((editorGroup.emptyBackground))((alpha.8))  # TODO: #0a0a0abb - verify match
    foreground: ((std.fg))
    border: ((std.outline))
    bottomBorder: ((std.outline.louder))

  keybindingTable:
    headerBackground: ((panel.background))
    rowsBackground: ((colors.black.1))

  # Terminal
  terminal:
    background: ((std.bg))
    foreground: ((std.fg))  # TODO: #d1d1d1 - verify match
    # ANSI Colors (hard-coded as requested)
    ansiBlack: "#1e1e1e"
    ansiBlue: "#8787d7"
    ansiBrightBlack: "#252525"
    ansiBrightBlue: "#8787d7"
    ansiBrightCyan: "#87c7c7"
    ansiBrightGreen: "#87c7c7"
    ansiBrightMagenta: "#c787b0"
    ansiBrightRed: "#a8a8a8"
    ansiBrightWhite: "#e1e1e1"
    ansiBrightYellow: "#d7c787"
    ansiCyan: "#87c7c7"
    ansiGreen: "#87b087"
    ansiMagenta: "#c787b0"
    ansiRed: "#d78787"
    ansiWhite: "#d1d1d1"
    ansiYellow: "#d7c787"
    # Terminal UI
    selectionBackground: ((colors.white.5))((alpha.6))  # TODO: #505050 + 80
    border: ((std.outline.faint))
    selectionForeground: ((colors.white.1))
    inactiveSelectionBackground: ((colors.black.3))  # TODO: #3a3d41 - verify match
    findMatchBackground: ((editor.findMatchHighlightBackground))
    findMatchBorder: ((editor.findMatchHighlightBorder))
    findMatchHighlightBackground: ((editor.findRangeHighlightBackground))
    findMatchHighlightBorder: ((editor.findRangeHighlightBorder))
    hoverHighlightBackground: ((std.accent))((alpha.3))  # TODO: #b0e9ff22 - verify color
    dropBackground: ((std.accent))((alpha.3))
    tab:
      activeBorder: "#0078d4"  # TODO: hard-coded blue, different from accent
    initialHintForeground: ((colors.white.5))((alpha.7))  # TODO: #808080aa

  terminalCursor:
    background: ((input.background))
    foreground: ((terminal.foreground))

  terminalCommandDecoration:
    defaultBackground: ((colors.green.4))
    successBackground: ((colors.green.4))
    errorBackground: ((std.error))

  terminalOverviewRuler:
    cursorForeground: ((std.accent))((alpha.7))  # TODO: #b0e9ff + aa
    findMatchForeground: ((editor.findMatchHighlightForeground))
    border: ((std.outline.whisper))

  terminalStickyScroll:
    background: ((std.bg.glass))
    border: ((std.outline.faint))

  terminalStickyScrollHover:
    background: ((std.bg.glass.hover))  # TODO: #0a0a0aff

  terminalCommandGuide:
    foreground: ((colors.yellow.2))

  # Terminal Symbol Icons
  terminalSymbolIcon:
    aliasForeground: ((std.accent))  # TODO: #b0e9ff
    flagForeground: ((std.warn))
    optionForeground: ((colors.purple.4))  # TODO: #c787b0
    optionValueForeground: ((colors.blue.4))  # TODO: #87c7c7
    methodForeground: ((std.success))
    argumentForeground: ((colors.red.4))  # TODO: #d78787
    inlineSuggestionForeground: ((colors.purple.2))  # TODO: #8787d7
    fileForeground: ((colors.white.1))
    folderForeground: ((std.fg))

  # Debug Toolbar
  debugToolBar:
    background: ((std.bg))
    border: ((std.outline.faint))

  # Debug View (variables, call stack, etc.)
  debugView:
    exceptionLabelForeground: ((colors.white.1))
    exceptionLabelBackground: ((std.error))
    stateLabelForeground: ((std.fg.inverse))
    stateLabelBackground: ((std.warn))
    valueChangedHighlight: ((colors.blue.4))((alpha.5))  # TODO: #87c7c7 + 66

  # Debug Token Expression (variable values in hover/watch)
  debugTokenExpression:
    name: ((std.fg))
    value: ((std.accent))  # TODO: #b0e9ff - verify color
    string: ((colors.purple.4))  # TODO: #c787b0 - verify match
    boolean: ((std.error))
    number: ((colors.yellow.3))
    error: ((colors.pink.1))  # #ff0077
    type: ((colors.white.5))((alpha.7))  # TODO: #808080aa

  # Debug Icons
  debugIcon:
    breakpointForeground: ((std.error))
    breakpointDisabledForeground: ((colors.white.5))  # TODO: #666666 - verify match
    breakpointUnverifiedForeground: ((std.error))((alpha.7))
    breakpointCurrentStackframeForeground: ((std.warn))
    breakpointStackframeForeground: ((colors.green.4))
    startForeground: ((std.accent))
    pauseForeground: ((colors.yellow.3))
    stopForeground: ((std.error))
    disconnectForeground: ((colors.white.5))
    restartForeground: ((colors.blue.4))
    stepOverForeground: ((std.info))
    stepIntoForeground: ((std.success))
    stepOutForeground: ((std.accent))  # TODO: #b0e9ff - verify color
    continueForeground: ((colors.green.4))
    stepBackForeground: ((colors.purple.4))

  # Debug Console
  debugConsole:
    infoForeground: ((colors.blue.4))
    warningForeground: ((colors.yellow.3))
    errorForeground: ((std.error))
    sourceForeground: ((std.accent))

  debugConsoleInputIcon:
    foreground: ((sideBarTitle.foreground))  # TODO: #8090A0 - verify match

  # Testing
  testing:
    runAction: ((colors.green.4))
    iconErrored: ((std.error))
    iconFailed: ((std.error))
    iconPassed: ((colors.green.4))
    iconQueued: ((colors.yellow.3))
    iconUnset: ((colors.white.5))((alpha.7))  # TODO: #808080aa
    iconSkipped: ((std.info))
    # Retired (faded versions) - these are actually flat dotted keys in VS Code
    "iconErrored.retired": ((std.error))((alpha.5))  # TODO: #cc5c5c66
    "iconFailed.retired": ((std.error))((alpha.5))
    "iconPassed.retired": ((colors.green.4))((alpha.5))  # TODO: #87b08766
    "iconQueued.retired": ((colors.yellow.3))((alpha.5))  # TODO: #d7c78766
    "iconUnset.retired": ((colors.white.5))((alpha.5))  # TODO: #80808055
    "iconSkipped.retired": ((std.info))((alpha.5))  # TODO: #88aacc66
    # Peek view
    peekBorder: ((std.outline))
    peekHeaderBackground: ((editorGroup.emptyBackground))((alpha.7))  # TODO: #0a0a0a77
    # Messages
    message:
      error:
        lineBackground: ((std.error))((alpha.3))
        badgeBackground: ((std.error))
        badgeBorder: ((std.error))((alpha.6))
        badgeForeground: ((std.fg.inverse))
      info:
        decorationForeground: ((std.info))
        lineBackground: ((std.info))((alpha.3))
    messagePeekBorder: ((std.outline))
    messagePeekHeaderBackground: ((editorGroup.emptyBackground))((alpha.7))  # TODO: #0a0a0a77
    # Coverage
    coveredBackground: ((colors.green.4))((alpha.3))  # TODO: #87b08722
    coveredBorder: ((colors.green.4))((alpha.6))  # TODO: #87b08788
    coveredGutterBackground: ((colors.green.4))((alpha.3))  # TODO: #87b08733
    uncoveredBranchBackground: ((std.error))((alpha.2))
    uncoveredBackground: ((std.error))((alpha.3))
    uncoveredBorder: ((std.error))((alpha.6))
    uncoveredGutterBackground: ((std.error))((alpha.3))
    coverCountBadgeBackground: ((std.accent))
    coverCountBadgeForeground: ((colors.white.1))

  # Welcome Page
  welcomePage:
    background: ((std.bg))
    progress:
      background: ((std.accent))((alpha.3))
      foreground: ((std.accent))
    tileBackground: ((colors.black.3))
    tileHoverBackground: ((colors.black.4))((alpha.7))  # TODO: #3a3a3aaa
    tileBorder: ((std.outline.faint))

  walkThrough:
    embeddedEditorBackground: ((input.background))

  walkthrough:
    stepTitle:
      foreground: ((std.accent))  # TODO: #b0e9ff - verify color

  # Git Decorations (file explorer indicators)
  gitDecoration:
    addedResourceForeground: ((colors.green.4))
    modifiedResourceForeground: ((colors.yellow.3))
    deletedResourceForeground: ((colors.red.3))  # TODO: #ff0000 - verify red.3 or use different
    renamedResourceForeground: ((std.info))
    stageModifiedResourceForeground: ((colors.yellow.2))
    stageDeletedResourceForeground: ((colors.red.3))  # TODO: #b66c6c - verify match
    untrackedResourceForeground: ((std.warn))
    ignoredResourceForeground: ((colors.white.5))((alpha.7))  # TODO: #505050aa
    conflictingResourceForeground: ((colors.pink.1))
    submoduleResourceForeground: ((std.accent))  # TODO: #b0e9ff - verify color

  # Git Blame
  git:
    blame:
      editorDecorationForeground: ((colors.white.5))((alpha.7))  # TODO: #808080aa

  # SCM Graph (commit history visualization)
  scmGraph:
    historyItemHoverLabelForeground: ((std.fg))
    historyItemHoverAdditionsForeground: ((colors.green.4))
    historyItemHoverDeletionsForeground: ((std.error))
    historyItemHoverDefaultLabelForeground: ((std.fg))
    historyItemHoverDefaultLabelBackground: ((input.background))
    # Graph line colors (5 alternating colors for branches)
    foreground1: ((std.accent))
    foreground2: ((colors.yellow.2))
    foreground3: ((colors.blue.4))
    foreground4: ((colors.purple.4))
    foreground5: ((std.info))
    # Reference colors
    historyItemRefColor: ((colors.yellow.1))  # TODO: #8f6f16 - verify match
    historyItemRemoteRefColor: ((colors.blue.1))  # TODO: #215e7a - verify match
    historyItemBaseRefColor: ((colors.green.1))  # TODO: #2b4636 - verify match

  # Settings Editor
  settings:
    headerForeground: ((std.fg))
    settingsHeaderHoverForeground: ((std.accent))  # TODO: #b0e9ff - verify color
    headerBorder: ((std.outline.faint))
    sashBorder: ((std.outline.faint))
    modifiedItemIndicator: ((colors.yellow.3))
    dropdownBackground: ((input.background))
    dropdownForeground: ((sideBar.foreground))  # TODO: #d1d1d1 - verify match
    dropdownBorder: ((std.outline.muted))
    dropdownListBorder: ((std.outline.faint))
    checkboxBackground: ((checkbox.background))  # Reuse existing checkbox styling
    checkboxForeground: ((checkbox.foreground))
    checkboxBorder: ((checkbox.border))
    rowHoverBackground: ((button.secondaryBackground))  # TODO: #303030aa
    focusedRowBackground: ((button.secondaryBackground))  # TODO: #303030dd - verify alpha
    focusedRowBorder: ((std.outline))  # TODO: #4b8ebd66
    textInputBackground: ((input.background))
    textInputForeground: ((sideBar.foreground))  # TODO: #d1d1d1 - verify match
    textInputBorder: ((input.border))
    numberInputBackground: ((input.background))
    numberInputForeground: ((sideBar.foreground))  # TODO: #d1d1d1 - verify match
    numberInputBorder: ((input.border))

  # Breadcrumbs (navigation path at top of editor)
  breadcrumb:
    foreground: ((sideBarTitle.foreground))  # TODO: #8090A0 - verify match
    background: ((editorGroup.emptyBackground))((alpha.5))  # TODO: #0a0a0a55
    focusForeground: ((sideBar.foreground))  # TODO: #D1D1D1 - verify match
    activeSelectionForeground: ((std.fg))

  breadcrumbPicker:
    background: ((editorGroup.emptyBackground))((alpha.7))  # TODO: #0a0a0aaa

  # Editor Links
  editorLink:
    activeForeground: ((colors.blue.4))  # TODO: #87C7C7

  # Editor Ruler (vertical line guides)
  editorRuler:
    foreground: ((colors.black.4))  # TODO: ## Breadcrumbs (navigation path at top of editor)

  # Editor Code Lens (inline hints)
  editorCodeLens:
    foreground: ((sideBarTitle.foreground))  # TODO: #A0A0A0 - verify match

  # Editor Light Bulb (quick fixes)
  editorLightBulb:
    foreground: ((colors.yellow.3))

  editorLightBulbAutoFix:
    foreground: ((colors.purple.2))  # TODO: #8787D7

  # Charts (performance graphs, etc.)
  charts:
    foreground: ((std.fg))
    lines: ((std.line))
    red: ((std.error))
    blue: ((std.accent))
    yellow: ((colors.yellow.3))
    orange: ((colors.orange.2))  # TODO: #c97c4b - verify match
    green: ((colors.green.4))
    purple: ((colors.purple.4))  # TODO: #a58cc4 - verify match

  chart:
    line: ((std.line))
    axis: ((std.accent))((alpha.5))
    guide: ((std.line.muted))

  # Chat (AI assistant features)
  chat:
    editedFileForeground: ((colors.yellow.4))  # TODO: #e2c08d - verify match
    slashCommandBackground: ((colors.black.3))  # TODO: #34414b - verify match
    slashCommandForeground: ((std.accent))  # TODO: #40a6ff - different blue?

  # Ports (development server indicators)
  ports:
    iconRunningProcessForeground: ((colors.green.2))  # TODO: #369432 - verify match
