theme:
  colors:
    # Base/Global colors (the singletons!)
    focusBorder: ((std.outline.faint))
    foreground: ((std.fg))
    selection:
      background: ((std.accent))
    descriptionForeground: ((std.fg))
    errorForeground: ((std.error))
    icon:
      foreground: ((std.fg.darker))
    widget:
      shadow: ((std.shadow))
      border: ((std.outline.muted))

    # Text colors (for markdown preview, welcome page, etc)
    textBlockQuote:
      background: ((std.bg.lightest))
      border: ((std.outline.faint))
    textCodeBlock:
      background: ((std.bg.lightest))
    textLink:
      foreground: ((std.accent))
      activeForeground: ((std.accent))
    textPreformat:
      foreground: ((std.info))
      background: ((std.bg.lightest))
    textSeparator:
      foreground: ((std.fg))

    # Action colors (toolbar interactions)
    toolbar:
      hoverBackground: ((std.accent))
      hoverOutline: ((std.outline.loud))
      activeBackground: ((std.accent.light))
    # Sash (splitter) colors
    sash:
      hoverBorder: ((std.sash))

    # Title bar
    titleBar:
      border: ((std.outline.whisper))
      activeBackground: ((std.bg))
      activeForeground: ((std.fg))
      inactiveBackground: ((std.bg.lighter))
      inactiveForeground: ((std.fg.darker))

    # Menubar (Top-level: File Edit etc.)
    menubar:
      selectionForeground: ((std.fg))
      selectionBackground: ((std.accent.light))
      selectionBorder: ((std.outline.louder))

    # Menu (Dropdowns themselves)
    menu:
      foreground: ((std.fg))
      background: ((std.bg.glass.dark))
      selectionForeground: ((menubar.selectionForeground))
      selectionBackground: ((menubar.selectionBackground))((+15))
      selectionBorder: ((menubar.selectionBorder))
      separatorBackground: ((std.accent.darkest))
      border: ((std.outline))

    # Command Center colors
    commandCenter:
      # Colors
      background: ((std.bg.glass))((-25))
      foreground: ((titleBar.activeForeground))((-25))
      border: ((std.outline))((-25))
      # Active (hovered or clicked)
      activeBackground: ((commandCenter.background))((+30))
      activeForeground: ((commandCenter.foreground))((+30))
      activeBorder: ((commandCenter.border))((+30))
      # Inactive Window
      inactiveForeground: ((commandCenter.background))((-10))
      inactiveBorder: ((commandCenter.border))((-10))
      # Debugging State
      debuggingBackground: ((std.bg.debug))

    # Activity Bar
    activityBar:
      background: ((std.transparent))
      foreground: ((std.fg))
      inactiveForeground: ((std.fg.darker))
      border: ((std.outline))
      # Active State
      activeBackground: ((std.transparent))
      activeBorder: ((std.accent.lightest))
      activeFocusBorder: ((activityBar.activeBorder))
      # Dragging
      dropBorder: ((std.outline.louder))

    # Activity Bar Badges
    activityBarBadge:
      background: ((std.accent))
      foreground: ((std.bg.inverse))

    # Warning Badge
    activityWarningBadge:
      background: ((std.warn))
      foreground: ((std.warnInverse))

    # Error Badge
    activityErrorBadge:
      background: ((std.error))
      foreground: ((std.errorInverse))

    # Activity Bar Top
    activityBarTop:
      background: ((activityBar.background))
      foreground: ((activityBar.foreground))
      inactiveForeground: ((activityBar.inactiveForeground))
      activeBackground: ((activityBar.activeBackground))
      activeBorder: ((activityBar.activeBorder))
      dropBorder: ((activityBar.dropBorder))

    # Lists and trees
    list:
      activeSelectionBackground: ((std.accent.dark))
      activeSelectionForeground: ((std.fg))
      activeSelectionIconForeground: ((std.fg))

      inactiveSelectionBackground: ((list.activeSelectionBackground))((^50))
      inactiveSelectionForeground: ((list.activeSelectionForeground))
      inactiveSelectionIconForeground: ((list.activeSelectionIconForeground))((^50))

      focusBackground: ((list.activeSelectionBackground))((+25))
      focusForeground: ((list.activeSelectionForeground))((+25))
      focusOutline: ((std.outline))
      focusHighlightForeground: ((list.focusBackground))((+25))
      focusAndSelectionOutline: ((list.focusOutline))((+25))

      hoverBackground: ((std.accent.darkest))
      hoverForeground: ((std.bg.inverse))

      dropBackground: ((std.accent.darkest))
      dropBetweenBackground: ((std.accent))

      highlightForeground: ((std.accent)) # I can't seem to activate this one

      filterMatchBackground: ((std.accent))
      filterMatchBorder: ((std.accent))((+50))

      errorForeground: ((std.error))
      warningForeground: ((std.warn))
      invalidItemForeground: ((std.info))
      deemphasizedForeground: ((std.fg))

    # List Filter Widget
    listFilterWidget:
      background: ((std.bg.glass))
      outline: ((std.outline))
      noMatchesOutline: ((colors.purple))
      shadow: ((std.shadow))

    # Tree guides
    tree:
      indentGuidesStroke: ((std.line))
      inactiveIndentGuidesStroke: ((std.line.muted))
      tableColumnsBorder: ((std.outline))
      tableOddRowsBackground: ((std.bg))

    # Status Bar colors
    # Base Status Bar
    statusBar:
      background: ((titleBar.activeBackground))
      foreground: ((titleBar.activeForeground))
      border: ((titleBar.border))
      # No Folder Open
      noFolderBackground: ((statusBar.background))
      noFolderForeground: ((statusBar.foreground))
      noFolderBorder: ((statusBar.border))
      # Debugging (stronger presence)
      debuggingBackground: ((std.bg.debug))
      debuggingForeground: ((std.fg.debug))
      debuggingBorder: ((std.outline.debug))
      # Focus
      focusBorder: ((std.outline))

    # Status Bar Item Interaction
    statusBarItem:
      activeBackground: ((std.accent))
      hoverBackground: ((std.accent.dark))
      hoverForeground: ((std.fg))
      compactHoverBackground: ((std.accent.darker))
      focusBorder: ((std.outline))
      # Prominent Items
      prominentBackground: ((std.accent))
      prominentForeground: ((std.fg))
      prominentHoverBackground: ((std.accent))
      prominentHoverForeground: ((std.fg))
      # Remote Indicator
      remoteBackground: ((std.accent))
      remoteForeground: ((std.fg))
      remoteHoverBackground: ((std.accent))
      remoteHoverForeground: ((std.fg))
      # Offline Indicator
      offlineBackground: ((std.warn))
      offlineForeground: ((std.fg.inverse))
      offlineHoverBackground: ((std.warn))
      offlineHoverForeground: ((std.fg.inverse))
      # Error State Items
      errorBackground: ((std.error))
      errorForeground: ((std.fg.inverse))
      errorHoverBackground: ((std.error))
      errorHoverForeground: ((std.fg.inverse))
      # Warning State Items
      warningBackground: ((std.warn))
      warningForeground: ((std.fg.inverse))
      warningHoverBackground: ((statusBarItem.offlineHoverBackground))
      warningHoverForeground: ((std.fg.inverse))

    # Editor Groups & Tabs
    # Editor Action List (quick fix menu, etc)
    editorActionList:
      background: ((std.bg.lighter))
      foreground: ((std.fg))
      focusBackground: ((std.accent))
      focusForeground: ((std.accent))

    # Editor Advanced Features (missing from current YAML)
    # Whitespace
    editorWhitespace:
      foreground: ((std.accent.darker))

    # Editor Group
    editorGroup:
      border: ((std.transparent))
      dropBackground: ((std.accent.darker))
      emptyBackground: ((std.bg))
      focusedEmptyBorder: ((std.outline))
      dropIntoPromptForeground: ((std.fg))
      dropIntoPromptBackground: ((std.bg))
      dropIntoPromptBorder: ((std.outline.louder))

    # Editor Group Header
    editorGroupHeader:
      noTabsBackground: ((editorGroup.emptyBackground))
      tabsBackground: ((std.bg))
      tabsBorder: ((std.transparent))
      border: ((std.outline))

    # Editor Pane
    editorPane:
      background: ((std.bg))

    sideBySideEditor:
      horizontalBorder: ((std.outline))
      verticalBorder: ((std.outline))

    # Tabs
    tab:
      border: ((std.fg))
      activeBorder: ((std.transparent))
      unfocusedActiveBorder: ((std.transparent))
      hoverBorder: ((std.outline))
      unfocusedHoverBorder: ((std.outline))
      lastPinnedBorder: ((std.outline))

      activeBorderTop: ((std.outline.louder))
      unfocusedActiveBorderTop: ((std.transparent))
      selectedBorderTop: ((std.outline.loud))

      activeBackground: ((std.accent))
      selectedBackground: ((std.accent))
      unfocusedActiveBackground: ((std.accent))
      inactiveBackground: ((std.transparent))
      unfocusedInactiveBackground: ((std.bg))
      unfocusedHoverBackground: ((std.bg))
      hoverBackground: ((std.accent))

      activeForeground: ((std.fg))
      selectedForeground: ((std.fg))
      unfocusedActiveForeground: ((std.fg))
      inactiveForeground: ((std.fg))
      unfocusedInactiveForeground: ((std.fg))
      unfocusedHoverForeground: ((std.fg.dark))
      hoverForeground: ((std.fg))

      # Modified indicators
      activeModifiedBorder: ((std.outline))
      inactiveModifiedBorder: ((std.outline.loud))
      unfocusedActiveModifiedBorder: ((std.outline.louder))
      unfocusedInactiveModifiedBorder: ((std.outline))

    # Panel colors
    # Panel Base + Frame
    panel:
      background: ((std.bg.light))
      border: ((std.outline.muted))
      dropBorder: ((std.outline.loud))

    # Panel Title Bar
    panelTitle:
      activeBorder: ((tab.activeBorderTop))
      activeForeground: ((tab.activeForeground))
      inactiveForeground: ((tab.inactiveForeground))
      border: ((std.outline.whisper))

    # Panel Title Badge (eg. terminal counts)
    panelTitleBadge:
      background: ((std.accent))
      foreground: ((std.fg))

    # Panel Section Headers
    panelSectionHeader:
      background: ((panel.background)) # slightly elevated
      foreground: ((std.fg))
      border: ((std.outline.faint))

    # Panel Sections
    panelSection:
      border: ((std.outline.faint))
      dropBackground: ((std.accent.dark))

    # Panel Input
    panelInput:
      border: ((std.outline.louder))

    # Panel Sticky Scroll
    panelStickyScroll: # TODO: come back to this
      background: ((std.test))
      border: ((std.test))
      shadow: ((std.test))

    # Output View
    outputView:
      background: ((std.transparent))

    outputViewStickyScroll:
      background: ((std.bg.glass))

    # Side bar
    sideBar:
      background: ((editor.background)) # slightly different from main bg
      foreground: ((std.fg)) # dimmer than main text
      border: ((std.outline.faint))
      dropBackground: ((std.accent))

    # Sidebar title
    sideBarTitle:
      foreground: ((std.fg)) # even dimmer for titles

    # Sidebar section headers
    sideBarSectionHeader:
      background: ((std.accent))
      foreground: ((std.fg))
      border: ((std.outline.faint))

    # Line Numbers
    editorLineNumber:
      foreground: ((std.accent))
      activeForeground: ((std.accent))
      dimmedForeground: ((editorLineNumber.foreground))

    # Cursor
    editorCursor:
      foreground: ((std.accent)) # visible but not screaming
      background: ((editor.background)) # block cursor background

    # Multi-cursor
    editorMultiCursor:
      primary:
        foreground: ((editorCursor.foreground))
        background: ((editorCursor.background))
      secondary:
        foreground: ((std.accent)) # slightly dimmer
        background: ((editorCursor.background))

    # Editor colors
    editor:
      background: ((std.bg.light))
      foreground: ((std.fg))
      placeholder:
        foreground: ((std.fg))
      compositionBorder: ((std.outline.louder))

      # Text selection
      selectionBackground: ((std.accent))
      selectionForeground: ((std.fg))
      inactiveSelectionBackground: ((std.accent))((^50))

      # Matching content highlights
      selectionHighlightBackground: ((std.accent))((^50))
      selectionHighlightBorder: ((std.outline))

      # Read access highlights (when you click on a variable)
      wordHighlightBackground: ((std.accent))((^50))
      wordHighlightBorder: ((std.outline))

      # Write access highlights (more prominent)
      wordHighlightStrongBackground: ((std.warn))((^50))
      wordHighlightStrongBorder: ((std.warn))

      # Generic text matches
      wordHighlightTextBackground: ((std.info))((^50))
      wordHighlightTextBorder: ((std.info))

      # CURRENT match (the focused one) - needs to pop!
      findMatchBackground: ((std.success))
      # Thanks MS for swapping this with editor.findMatchForeground
      findMatchHighlightForeground: ((std.successInverse))((^50))
      findMatchBorder: ((std.success))

      # OTHER matches (passive highlights) - whisper mode
      findMatchHighlightBackground: ((std.success))((^50))
      # Thanks MS for swapping this with editor.findMatchHighlightForeground
      findMatchForeground: ((std.successInverse))
      findMatchHighlightBorder: ((std.success))

      # Range highlights (replacement preview, etc)
      findRangeHighlightBackground: ((std.accent))((^50))
      findRangeHighlightBorder: ((std.outline))((^50))

      # Line Highlighting
      lineHighlightBackground: ((std.outline))
      lineHighlightBorder: ((std.outline.faint))

      # Hover/Symbol Highlighting
      hoverHighlightBackground: ((std.accent))((^50))
      symbolHighlightBackground: ((std.accent))((^50))
      symbolHighlightBorder: ((std.outline.loud))
      rangeHighlightBackground: ((std.outline.whisper))((^50))
      rangeHighlightBorder: ((std.outline.faint))

      # Folds
      ## Folded block background
      foldBackground: ((std.accent))((^50))
      # Folded placeholder text (the little …)
      foldPlaceholderForeground: ((std.accent))

      # Debug Stack Frame Highlights
      stackFrameHighlightBackground: ((std.accent))
      focusedStackFrameHighlightBackground: ((std.error))

      # Inline Values (debug hover values)
      inlineValuesBackground: ((colors.blue))((-50))
      inlineValuesForeground: ((std.fg))

      # Snippets
      snippetTabstopHighlightBackground: ((std.accent))
      snippetTabstopHighlightBorder: ((std.outline.muted))
      snippetFinalTabstopHighlightBackground: ((colors.blue))((+50)) # TODO: #87c7c7 + 22
      snippetFinalTabstopHighlightBorder: ((colors.blue))((+50)) # TODO: #87c7c7 + 55

    # Scrollbar control
    scrollbar:
      shadow: ((std.shadow))

    scrollbarSlider:
      background: ((std.accent.darker))
      hoverBackground: ((std.accent.dark))
      activeBackground: ((std.accent))

    # Badge
    badge:
      foreground: ((std.accent))
      background: ((std.accent))

    # Progress bar
    progressBar:
      background: ((std.success))

    # Input control
    input:
      background: ((std.bg.light))
      border: ((std.outline.louder))
      foreground: ((std.fg))
      placeholderForeground: ((std.fg))

    inputOption:
      activeBackground: ((std.accent))
      activeBorder: ((std.fg))
      activeForeground: ((std.fg))

    # Input validation states
    inputValidation:
      errorBackground: ((input.background))
      errorForeground: ((std.error))
      errorBorder: ((std.error))
      warningBackground: ((input.background))
      warningForeground: ((std.warn))
      warningBorder: ((std.warn))
      infoBackground: ((input.background))
      infoForeground: ((std.info))
      infoBorder: ((std.info))

    # Dropdown control
    dropdown:
      background: ((input.background))
      listBackground: ((std.bg.glass))
      border: ((input.border))
      foreground: ((input.foreground))

    # Button control
    button:
      background: ((std.accent))
      foreground: ((std.fg))
      border: ((std.outline))
      hoverBackground: ((std.accent))

      # Secondary buttons
      secondaryForeground: ((std.fg))
      secondaryBackground: ((std.bg.light))
      secondaryHoverBackground: ((std.bg))

      separator: ((std.fg))

    # Checkbox
    checkbox:
      background: ((std.accent))
      foreground: ((std.fg))
      border: ((std.outline))
      selectBackground: ((std.accent))
      selectBorder: ((std.outline))
      disabled:
        background: ((std.bg.light))
        foreground: ((std.fg))

    # Radio buttons
    radio:
      activeBackground: ((std.accent))
      activeBorder: ((std.outline))
      activeForeground: ((std.fg))
      inactiveBackground: ((std.accent))
      inactiveBorder: ((std.outline.muted))
      inactiveForeground: ((std.fg))
      inactiveHoverBackground: ((std.accent))

    # Profiles
    profileBadge:
      background: ((std.accent))
      foreground: ((std.fg.inverse))

    profiles:
      sashBorder: ((std.sash))

    # Minimap
    minimap:
      background: ((sideBar.background))
      selectionHighlight: ((std.accent))((^50))
      errorHighlight: ((std.error))
      warningHighlight: ((std.warn))

    minimapSlider:
      background: ((std.accent))
      hoverBackground: ((std.accent))
      activeBackground: ((std.accent))

    minimapGutter:
      addedBackground: ((std.success))
      modifiedBackground: ((colors.yellow))((-50))
      deletedBackground: ((std.error))

    # Indent Guides
    editorIndentGuide:
      background1: ((colors.blue))((-50)) # Very faint blue guides
      background2: ((colors.blue))((-50))
      background3: ((colors.blue))((-50))
      background4: ((colors.blue))((-50))
      background5: ((colors.blue))((-50))
      background6: ((colors.blue))((-50))
      activeBackground1: ((std.accent)) # All active guides same color
      activeBackground2: ((std.accent))
      activeBackground3: ((std.accent))
      activeBackground4: ((std.accent))
      activeBackground5: ((std.accent))
      activeBackground6: ((std.accent))

    # Bracket Matching
    editorBracketMatch:
      background: ((colors.blue))((-50))
      border: ((std.outline.muted))

    # Bracket Pair Colorization
    editorBracketHighlight:
      foreground1: ((colors.blue))((+50)) # dd rounds to e
      foreground2: ((colors.yellow))((-50))
      foreground3: ((colors.green))
      foreground4: ((colors.purple))
      foreground5: ((std.accent))
      foreground6: ((std.error))
      unexpectedBracket:
        foreground: ((colors.pink))((-70)) # #ff0077 from JSON

    editorBracketPairGuide:
      background1: ((colors.blue))((-50))
      background2: ((colors.blue))((-50))
      background3: ((colors.blue))((-50))
      background4: ((colors.blue))((-50))
      background5: ((colors.blue))((-50))
      background6: ((colors.blue))((-50))
      activeBackground1: ((std.accent))
      activeBackground2: ((std.accent))
      activeBackground3: ((std.accent))
      activeBackground4: ((std.accent))
      activeBackground5: ((std.accent))
      activeBackground6: ((std.accent))

    # Overview Ruler (sidebar ruler with indicators)
    editorOverviewRuler:
      background: ((std.bg.glass))
      border: ((std.outline.faint))
      # Find/Selection highlights
      findMatchForeground: ((colors.green))((-50))((^50))
      rangeHighlightForeground: ((colors.blue))((+50))((^50))
      selectionHighlightForeground: ((colors.blue))((+50))((^50))
      # Word highlights
      wordHighlightForeground: ((colors.blue))((+50))((^50)) # read access
      wordHighlightStrongForeground: ((std.error))((^50)) # write access
      wordHighlightTextForeground: ((std.warn))((^50)) # generic text match
      # Git/SCM modifications
      modifiedForeground: ((colors.yellow)) # #d7c787aa
      addedForeground: ((colors.green))((+50)) # #87b087
      deletedForeground: ((std.error)) # #cc5c5c
      # Diagnostics
      errorForeground: ((std.error))
      warningForeground: ((std.warn))
      infoForeground: ((colors.blue))((+75)) # #88aacc approximated
      # Bracket matching
      bracketMatchForeground: ((std.accent))
      # Inline chat (AI content)
      inlineChatInserted: ((colors.green))((+50))
      inlineChatRemoved: ((std.error))
      currentContentForeground: ((colors.blue))((+50)) # #87C7C7
      incomingContentForeground: ((colors.purple)) # #8787D7
      commonContentForeground: ((colors.yellow))((+50))

    # TODO: Fix to use std status colours
    # Error/Warning/Info decorations in editor
    editorError:
      foreground: ((std.error))
      border: ((std.error))
      background: ((std.error))((^50))

    editorWarning:
      foreground: ((std.warn))
      border: ((std.warn))
      background: ((std.warn))((^50))

    editorInfo:
      foreground: ((colors.blue))((+75)) # #88aacc
      border: ((colors.blue))((+75))
      background: ((colors.blue))((+75))((^50))

    editorHint:
      foreground: ((std.success))
      border: ((std.success))

    # Problems panel icons
    problemsErrorIcon:
      foreground: ((std.error))
    problemsWarningIcon:
      foreground: ((std.warn))
    problemsInfoIcon:
      foreground: ((colors.blue))((+75))

    # TODO: Fix to use std status colours
    # Editor Gutter (line number area with git indicators, etc.)
    editorGutter:
      background: ((std.bg))
      # Git modification indicators
      modifiedBackground: ((colors.yellow)) # #d7c787 + 88
      modifiedSecondaryBackground: ((colors.yellow))((-50)) # #c9b27c + 88
      addedBackground: ((colors.green))((+50)) # #87b087 + 88
      addedSecondaryBackground: ((std.success)) # #a3c4a3 + 88
      deletedBackground: ((std.error)) # #cc5c5c (solid)
      deletedSecondaryBackground: ((colors.red)) # #b66c6c - TODO: need to check colors.red array
      # Comment indicators
      commentRangeForeground: ((std.fg)) # #e1e1e1 + aa
      commentGlyphForeground: ((std.success)) # #a3c4a3
      commentUnresolvedGlyphForeground: ((std.warn)) # #e5bf72
      # UI controls
      foldingControlForeground: ((std.accent)) # #4b8ebd
      # Generic item indicators
      itemGlyphForeground: ((std.accent)) # #b0e9ff + cc - TODO: need to verify this color
      itemBackground: ((colors.blue))((-50)) # #2e5673 + 11 - TODO: need to verify this matches

    # Editor Comments Widget
    editorCommentsWidget:
      resolvedBorder: ((std.success))
      unresolvedBorder: ((std.warn))
      rangeBackground: ((colors.blue))((-50)) # TODO: #2e5673 + 11
      rangeActiveBackground: ((std.accent))
      replyInputBackground: ((input.background)) # Reuse input styling

    # Inline Edit (AI suggestions, etc.)
    inlineEdit:
      gutterIndicator:
        primaryBorder: ((std.outline))
        primaryForeground: ((std.accent)) # TODO:  #b0e9ff - need to check this color
        primaryBackground: ((colors.blue))((-50))
        secondaryBorder: ((std.success))
        secondaryForeground: ((colors.yellow))((-50)) # TODO: #c9b27c
        secondaryBackground: ((colors.blue))((-50))
        successfulBorder: ((colors.green))((+50)) # TODO: #87b087
        successfulForeground: ((std.success))
        successfulBackground: ((colors.blue))((-50)) # TODO: #2e5673 + 22
        background: ((std.bg))

      originalBackground: ((std.accent))((^50))
      modifiedBackground: ((std.accent))((^50))
      originalChangedLineBackground: ((std.accent))((^50))
      originalChangedTextBackground: ((colors.blue))((-50))((^50))
      modifiedChangedLineBackground: ((std.accent))((^50))
      modifiedChangedTextBackground: ((std.accent))((^50))
      originalBorder: ((std.outline))
      modifiedBorder: ((std.outline)) # TODO: #b0e9ff - different from std.accent?
      tabWillAcceptModifiedBorder: ((colors.green))((+50))
      tabWillAcceptOriginalBorder: ((std.success))

    # Diff Editor
    diffEditor:
      insertedTextBackground: ((colors.green))((+50))((^50))
      insertedTextBorder: ((colors.green))((+50))
      removedTextBackground: ((std.error))((^50))
      removedTextBorder: ((std.error))
      insertedLineBackground: ((colors.green))((+50))((^50))
      removedLineBackground: ((std.error))((^50))

    diffEditorGutter:
      insertedLineBackground: ((colors.green))((+50)) # TODO: #87b087 + 33
      removedLineBackground: ((std.error))

    diffEditorOverview:
      insertedForeground: ((colors.green))((+50)) # TODO: #87b087 + 88
      removedForeground: ((std.error))

    # Inline Chat (AI assistant features)
    inlineChat:
      background: ((panel.background)) # TODO: #1f1f1f - verify panel.background matches
      foreground: ((std.fg))
      border: ((std.outline.muted))
      shadow: ((std.shadow)) # TODO: #00000033 - verify std.shadow matches

    inlineChatInput:
      background: ((input.background))
      border: ((std.outline.faint))
      focusBorder: ((std.outline.loud))
      placeholderForeground: ((std.fg))

    inlineChatDiff:
      inserted: ((colors.green))((+50)) # TODO: #87b087 + 22
      removed: ((std.error))

    # Interactive Code Cell Borders
    interactive:
      activeCodeBorder: ((std.outline.muted)) # TODO: #4b8ebd + 66
      inactiveCodeBorder: ((std.outline.faint))

    # Editor Widget (Find/Replace, Peek input, etc.)
    editorWidget:
      foreground: ((std.fg))
      background: ((std.bg)) # TODO: #1f1f1f - verify match
      border: ((std.outline.faint))
      resizeBorder: ((std.outline.louder))

    # Suggest Widget (autocomplete)
    editorSuggestWidget:
      background: ((panel.background))
      border: ((std.outline.faint))
      foreground: ((sideBar.foreground)) # TODO: #d1d1d1 - verify match
      focusHighlightForeground: ((std.accent)) # TODO: #b0e9ff - verify color
      highlightForeground: ((std.accent)) # TODO: #b0e9ff - verify color
      selectedBackground: ((list.activeSelectionBackground))
      selectedForeground: ((std.fg))
      selectedIconForeground: ((std.accent)) # TODO: #b0e9ff - verify color

    editorSuggestWidgetStatus:
      foreground: ((list.deemphasizedForeground)) # TODO: #808080aa - verify match

    # Editor Hover Widget
    editorHoverWidget:
      foreground: ((std.fg))
      background: ((panel.background))
      border: ((std.outline.faint))
      highlightForeground: ((std.accent)) # TODO: #b0e9ff - verify color
      statusBarBackground: ((input.background))

    # Ghost Text (Inline Suggest/Preview)
    editorGhostText:
      foreground: ((std.fg))
      background: ((std.transparent))
      border: ((std.outline.faint))

    # Sticky Scroll
    editorStickyScroll:
      background: ((std.bg.glass)) # TODO: #0a0a0a77 - verify match
      border: ((std.outline.faint))
      shadow: ((std.shadow)) # TODO: #4b8ebd11 - verify match

    editorStickyScrollHover:
      background: ((std.bg.glass.hover)) # TODO: #0a0a0aff - verify match

    # Debug Exception Widget
    debugExceptionWidget:
      background: ((panel.background))
      border: ((std.error))

    # Marker Navigation (error/warning navigation)
    editorMarkerNavigation:
      background: ((std.bg))

    editorMarkerNavigationError:
      background: ((std.error))
      headerBackground: ((std.error))

    editorMarkerNavigationWarning:
      background: ((std.warn))
      headerBackground: ((std.warn))

    editorMarkerNavigationInfo:
      background: ((std.info))
      headerBackground: ((std.info))

    # Peek View (Go to Definition, Find References, etc.)
    peekView:
      border: ((std.outline.louder))

    peekViewTitle:
      background: ((editorGroup.emptyBackground)) # TODO: #0a0a0a77 - verify match

    peekViewTitleLabel:
      foreground: ((std.fg))

    peekViewTitleDescription:
      foreground: ((std.fg.dark))

    peekViewResult:
      background: ((editorGroup.emptyBackground)) # TODO: #0a0a0a77 - verify match
      fileForeground: ((std.fg))
      lineForeground: ((sideBarTitle.foreground)) # TODO: #a0a0a0 - verify match
      matchHighlightBackground: ((std.transparent))
      selectionBackground: ((list.activeSelectionBackground))
      selectionForeground: ((std.fg))

    peekViewEditorGutter:
      background: ((std.accent))

    peekViewEditor:
      matchHighlightBackground: ((std.accent)) # TODO: #b0e9ff33 - verify color
      matchHighlightBorder: ((std.outline.louder))
      background: ((input.background)) # #2525257f

    peekViewEditorStickyScroll:
      background: ((std.bg.glass))

    # Merge Conflicts
    merge:
      currentHeaderBackground: ((std.accent))((^50))
      currentContentBackground: ((std.accent))((^50))
      incomingHeaderBackground: ((colors.green))((+50))((^50))
      incomingContentBackground: ((colors.green))((+50))((^50))
      commonContentBackground: ((std.bg.inverse))((^50))
      commonHeaderBackground: ((std.bg.inverse))((^75))
      border: ((std.outline))

    mergeEditor:
      change:
        background: ((std.accent))
        word:
          background: ((std.accent))
      conflict:
        unhandledUnfocused:
          border: ((std.error))
        unhandledFocused:
          border: ((std.error))
        handledUnfocused:
          border: ((colors.green))((+50))
        handledFocused:
          border: ((colors.green))((+50))
        handled:
          minimapOverViewRuler: ((colors.green))((+50))
        unhandled:
          minimapOverViewRuler: ((std.error))
        input1:
          background: ((std.accent))
        input2:
          background: ((colors.green))((+50)) # TODO: #87b087 + 22
      conflictingLines:
        background: ((std.error))
      changeBase:
        background: ((std.bg.inverse))((-50)) # TODO: #808080 + 22
        word:
          background: ((std.bg.inverse))((-80)) # TODO: #808080 + 44

    # Action Bar
    actionBar:
      toggledBackground: ((std.bg.lighter))

    # Simple Find Widget
    simpleFindWidget:
      sashBorder: ((std.sash)) # TODO: #ff0000 - this is red, matches your test color

    # Gauge (progress indicators)
    gauge:
      background: ((std.bg))
      foreground: ((std.success))
      border: ((std.outline.faint))
      warningBackground: ((colors.yellow))((-70)) # #b19500
      warningForeground: ((colors.yellow)) # #ffd700
      errorBackground: ((colors.red))((-70)) # #861c11
      errorForeground: ((colors.red))((+70)) # #e85b4c

    # Notification Center
    notificationCenter:
      border: ((std.outline.faint))

    notificationCenterHeader:
      foreground: ((std.fg))
      background: ((std.bg))

    # Notification Toasts
    notificationToast:
      border: ((std.outline))

    # Notification Items
    notifications:
      foreground: ((std.fg))
      background: ((std.bg))
      border: ((std.outline.whisper))

    # Links inside notifications
    notificationLink:
      foreground: ((std.accent)) # TODO: #b0e9ff - verify color match

    # Icons
    notificationsErrorIcon:
      foreground: ((std.error))

    notificationsWarningIcon:
      foreground: ((std.warn))

    notificationsInfoIcon:
      foreground: ((std.info)) # TODO: #88aacc - verify std.info exists

    # Banner (top-of-workbench notifications)
    banner:
      background: ((std.accent))
      foreground: ((std.fg))
      iconForeground: ((std.accent)) # TODO: #b0e9ff - verify color match

    # Extension View
    extensionButton:
      prominentForeground: ((std.fg))
      prominentBackground: ((button.background)) # TODO: #1a2f4f - verify match
      prominentHoverBackground: ((std.accent))
      foreground: ((std.fg))
      background: ((button.secondaryBackground))
      hoverBackground: ((std.accent))
      separator: ((std.line))

    extensionBadge:
      remoteBackground: ((std.accent))
      remoteForeground: ((std.fg))

    extensionIcon:
      starForeground: ((std.warn))
      verifiedForeground: ((std.info))
      preReleaseForeground: ((std.accent)) # TODO: #b0e9ff - verify color
      sponsorForeground: ((std.error))
      privateForeground: ((std.success))

    # Quick Picker
    pickerGroup:
      border: ((std.outline))
      foreground: ((std.accent)) # TODO: #b0e9ff - verify color

    quickInput:
      background: ((editorGroup.emptyBackground)) # TODO: #0a0a0abb - verify match
      foreground: ((std.fg))

    quickInputList:
      focusBackground: ((std.accent))
      focusForeground: ((std.fg))
      focusIconForeground: ((std.accent)) # TODO: #b0e9ff - verify color

    quickInputTitle:
      background: ((editorGroup.emptyBackground)) # TODO: #0a0a0abb - verify match

    # Keybinding Labels
    keybindingLabel:
      background: ((editorGroup.emptyBackground)) # TODO: #0a0a0abb - verify match
      foreground: ((std.fg))
      border: ((std.outline))
      bottomBorder: ((std.outline.louder))

    keybindingTable:
      headerBackground: ((panel.background))
      rowsBackground: ((std.bg.lightest))

    # Terminal
    terminal:
      background: ((std.bg))
      foreground: ((std.fg)) # TODO: #d1d1d1 - verify match
      # ANSI Colors (hard-coded as requested)
      ansiBlack: "#1e1e1e"
      ansiBlue: "#8787d7"
      ansiBrightBlack: "#252525"
      ansiBrightBlue: "#8787d7"
      ansiBrightCyan: "#87c7c7"
      ansiBrightGreen: "#87c7c7"
      ansiBrightMagenta: "#c787b0"
      ansiBrightRed: "#a8a8a8"
      ansiBrightWhite: "#e1e1e1"
      ansiBrightYellow: "#d7c787"
      ansiCyan: "#87c7c7"
      ansiGreen: "#87b087"
      ansiMagenta: "#c787b0"
      ansiRed: "#d78787"
      ansiWhite: "#d1d1d1"
      ansiYellow: "#d7c787"
      # Terminal UI
      selectionBackground: ((std.bg.inverse))((^60)) # TODO: #505050 + 80
      border: ((std.outline.faint))
      selectionForeground: ((std.fg))
      inactiveSelectionBackground: ((std.bg.lighter)) # TODO: #3a3d41 - verify match
      findMatchBackground: ((editor.findMatchHighlightBackground))
      findMatchBorder: ((editor.findMatchHighlightBorder))
      findMatchHighlightBackground: ((editor.findRangeHighlightBackground))
      findMatchHighlightBorder: ((editor.findRangeHighlightBorder))
      hoverHighlightBackground: ((std.accent)) # TODO: #b0e9ff22 - verify color
      dropBackground: ((std.accent))((^50))
      tab:
        activeBorder: "#0078d4" # TODO: hard-coded blue, different from accent
      initialHintForeground: ((std.fg.darker))

    terminalCursor:
      background: ((input.background))
      foreground: ((terminal.foreground))

    terminalCommandDecoration:
      defaultBackground: ((colors.green))((+50))
      successBackground: ((colors.green))((+50))
      errorBackground: ((std.error))

    terminalOverviewRuler:
      cursorForeground: ((std.accent)) # TODO: #b0e9ff + aa
      findMatchForeground: ((editor.findMatchHighlightForeground))
      border: ((std.outline.whisper))

    terminalStickyScroll:
      background: ((std.bg.glass))
      border: ((std.outline.faint))

    terminalStickyScrollHover:
      background: ((std.bg.glass.hover)) # TODO: #0a0a0aff

    terminalCommandGuide:
      foreground: ((colors.yellow))((-50))

    # Terminal Symbol Icons
    terminalSymbolIcon:
      aliasForeground: ((std.accent)) # TODO: #b0e9ff
      flagForeground: ((std.warn))
      optionForeground: ((colors.purple))
      optionValueForeground: ((colors.blue))((+50)) # TODO: #87c7c7
      methodForeground: ((std.success))
      argumentForeground: ((colors.red))((+50)) # TODO: #d78787
      inlineSuggestionForeground: ((colors.purple))
      fileForeground: ((std.fg))
      folderForeground: ((std.fg))

    # Debug Toolbar
    debugToolBar:
      background: ((std.bg))
      border: ((std.outline.faint))

    # Debug View (variables, call stack, etc.)
    debugView:
      exceptionLabelForeground: ((std.fg))
      exceptionLabelBackground: ((std.error))
      stateLabelForeground: ((std.fg.inverse))
      stateLabelBackground: ((std.warn))
      valueChangedHighlight: ((colors.blue))((+50)) # TODO: #87c7c7 + 66

    # Debug Token Expression (variable values in hover/watch)
    debugTokenExpression:
      name: ((std.fg))
      value: ((std.accent)) # TODO: #b0e9ff - verify color
      string: ((colors.purple))
      boolean: ((std.error))
      number: ((colors.yellow))
      error: ((colors.pink))((-70)) # #ff0077
      type: ((std.fg.dark))

    # Debug Icons
    debugIcon:
      breakpointForeground: ((std.error))
      breakpointDisabledForeground: ((std.fg.darker))
      breakpointUnverifiedForeground: ((std.error))
      breakpointCurrentStackframeForeground: ((std.warn))
      breakpointStackframeForeground: ((colors.green))((+50))
      startForeground: ((std.accent))
      pauseForeground: ((colors.yellow))
      stopForeground: ((std.error))
      disconnectForeground: ((std.fg.dark))
      restartForeground: ((colors.blue))((+50))
      stepOverForeground: ((std.info))
      stepIntoForeground: ((std.success))
      stepOutForeground: ((std.accent)) # TODO: #b0e9ff - verify color
      continueForeground: ((colors.green))((+50))
      stepBackForeground: ((colors.purple))

    # Debug Console
    debugConsole:
      infoForeground: ((colors.blue))((+50))
      warningForeground: ((colors.yellow))
      errorForeground: ((std.error))
      sourceForeground: ((std.accent))

    debugConsoleInputIcon:
      foreground: ((sideBarTitle.foreground)) # TODO: #8090A0 - verify match

    # Testing
    testing:
      runAction: ((colors.green))((+50))
      iconErrored: ((std.error))
      iconFailed: ((std.error))
      iconPassed: ((colors.green))((+50))
      iconQueued: ((colors.yellow))
      iconUnset: ((std.fg.darker))
      iconSkipped: ((std.info))
      # Retired (faded versions) - these are actually flat dotted keys in VS Code
      "iconErrored.retired": ((std.error)) # TODO: #cc5c5c66
      "iconFailed.retired": ((std.error))
      "iconPassed.retired": ((colors.green))((+50)) # TODO: #87b08766
      "iconQueued.retired": ((colors.yellow)) # TODO: #d7c78766
      "iconUnset.retired": ((std.fg.darker))
      "iconSkipped.retired": ((std.info)) # TODO: #88aacc66
      # Peek view
      peekBorder: ((std.outline))
      peekHeaderBackground: ((editorGroup.emptyBackground)) # TODO: #0a0a0a77
      # Messages
      message:
        error:
          lineBackground: ((std.error))
          badgeBackground: ((std.error))
          badgeBorder: ((std.error))
          badgeForeground: ((std.fg.inverse))
        info:
          decorationForeground: ((std.info))
          lineBackground: ((std.info))
      messagePeekBorder: ((std.outline))
      messagePeekHeaderBackground: ((editorGroup.emptyBackground)) # TODO: #0a0a0a77
      # Coverage
      coveredBackground: ((colors.green))((+50)) # TODO: #87b08722
      coveredBorder: ((colors.green))((+50)) # TODO: #87b08788
      coveredGutterBackground: ((colors.green))((+50)) # TODO: #87b08733
      uncoveredBranchBackground: ((std.error))
      uncoveredBackground: ((std.error))
      uncoveredBorder: ((std.error))
      uncoveredGutterBackground: ((std.error))
      coverCountBadgeBackground: ((std.accent))
      coverCountBadgeForeground: ((std.fg))

    # Welcome Page
    welcomePage:
      background: ((std.bg))
      progress:
        background: ((std.accent))
        foreground: ((std.accent))
      tileBackground: ((std.bg.lighter))
      tileHoverBackground: ((std.bg.lighter)) # TODO: #3a3a3aaa
      tileBorder: ((std.outline.faint))

    walkThrough:
      embeddedEditorBackground: ((input.background))

    walkthrough:
      stepTitle:
        foreground: ((std.accent)) # TODO: #b0e9ff - verify color

    # Git Decorations (file explorer indicators)
    gitDecoration:
      addedResourceForeground: ((colors.green))((+50))
      modifiedResourceForeground: ((colors.yellow))
      deletedResourceForeground: ((colors.red)) # TODO: #ff0000 - verify red.3 or use different
      renamedResourceForeground: ((std.info))
      stageModifiedResourceForeground: ((colors.yellow))((-50))
      stageDeletedResourceForeground: ((colors.red)) # TODO: #b66c6c - verify match
      untrackedResourceForeground: ((std.warn))
      ignoredResourceForeground: ((std.fg.dark)) # TODO: #505050aa
      conflictingResourceForeground: ((colors.pink))((-70))
      submoduleResourceForeground: ((std.accent)) # TODO: #b0e9ff - verify color

    # Git Blame
    git:
      blame:
        editorDecorationForeground: ((std.fg.dark)) # TODO: #808080aa

    # SCM Graph (commit history visualization)
    scmGraph:
      historyItemHoverLabelForeground: ((std.fg))
      historyItemHoverAdditionsForeground: ((colors.green))((+50))
      historyItemHoverDeletionsForeground: ((std.error))
      historyItemHoverDefaultLabelForeground: ((std.fg))
      historyItemHoverDefaultLabelBackground: ((input.background))
      # Graph line colors (5 alternating colors for branches)
      foreground1: ((std.accent))
      foreground2: ((colors.yellow))((-50))
      foreground3: ((colors.blue))((+50))
      foreground4: ((colors.purple))
      foreground5: ((std.info))
      # Reference colors
      historyItemRefColor: ((colors.yellow))((-70)) # TODO: #8f6f16 - verify match
      historyItemRemoteRefColor: ((colors.blue))((-50)) # TODO: #215e7a - verify match
      historyItemBaseRefColor: ((colors.green))((-70)) # TODO: #2b4636 - verify match

    # Settings Editor
    settings:
      headerForeground: ((std.fg))
      settingsHeaderHoverForeground: ((std.accent))
      headerBorder: ((std.outline.faint))
      sashBorder: ((std.sash))
      modifiedItemIndicator: ((colors.yellow))
      dropdownBackground: ((input.background))
      dropdownForeground: ((sideBar.foreground)) # TODO: #d1d1d1 - verify match
      dropdownBorder: ((std.outline.muted))
      dropdownListBorder: ((std.outline.faint))
      checkboxBackground: ((checkbox.background)) # Reuse existing checkbox styling
      checkboxForeground: ((checkbox.foreground))
      checkboxBorder: ((checkbox.border))
      rowHoverBackground: ((button.secondaryBackground)) # TODO: #303030aa
      focusedRowBackground: ((button.secondaryBackground))
      focusedRowBorder: ((std.outline)) # TODO: #4b8ebd66
      textInputBackground: ((input.background))
      textInputForeground: ((sideBar.foreground)) # TODO: #d1d1d1 - verify match
      textInputBorder: ((input.border))
      numberInputBackground: ((input.background))
      numberInputForeground: ((sideBar.foreground)) # TODO: #d1d1d1 - verify match
      numberInputBorder: ((input.border))

    # Breadcrumbs (navigation path at top of editor)
    breadcrumb:
      foreground: ((sideBarTitle.foreground)) # TODO: #8090A0 - verify match
      background: ((editorGroup.emptyBackground)) # TODO: #0a0a0a55
      focusForeground: ((sideBar.foreground)) # TODO: #D1D1D1 - verify match
      activeSelectionForeground: ((std.fg))

    breadcrumbPicker:
      background: ((editorGroup.emptyBackground)) # TODO: #0a0a0aaa

    # Editor Links
    editorLink:
      activeForeground: ((colors.blue))((+50)) # TODO: #87C7C7

    # Editor Ruler (vertical line guides)
    editorRuler:
      foreground: ((std.line.faint)) # TODO: ## Breadcrumbs (navigation path at top of editor)

    # Editor Code Lens (inline hints)
    editorCodeLens:
      foreground: ((sideBarTitle.foreground)) # TODO: #A0A0A0 - verify match

    # Editor Light Bulb (quick fixes)
    editorLightBulb:
      foreground: ((colors.yellow))

    editorLightBulbAutoFix:
      foreground: ((colors.purple)) # TODO: #8787D7

    # Charts (performance graphs, etc.)
    charts:
      foreground: ((std.fg))
      lines: ((std.line))
      red: ((std.error))
      blue: ((std.accent))
      yellow: ((colors.yellow))
      orange: ((colors.orange))((-50)) # TODO: #c97c4b - verify match
      green: ((colors.green))((+50))
      purple: ((colors.purple)) # TODO: #a58cc4 - verify match

    chart:
      line: ((std.line))
      axis: ((std.accent))
      guide: ((std.line.muted))

    # Chat (AI assistant features)
    chat:
      editedFileForeground: ((colors.yellow))((+50)) # TODO: #e2c08d - verify match
      slashCommandBackground: ((std.bg.lighter)) # TODO: #34414b - verify match
      slashCommandForeground: ((std.accent)) # TODO: #40a6ff - different blue?

    # Ports (development server indicators)
    ports:
      iconRunningProcessForeground: ((colors.green))((-50)) # TODO: #369432 - verify match
